---
import SiteNav from '../components/SiteNav/index.astro';
import SkipToContent from '../components/SkipToContent/index.astro';
import BaseLayout from '../layouts/Base/index.astro';

import type { GetStaticPaths, InferGetStaticPropsType, PaginateFunction } from 'astro';
import { MAX_POSTS_PER_PAGE, listAllPosts } from 'src/utils/post';
import BlogPostsLayout from '../layouts/BlogPosts.astro';


// eslint-disable-next-line @typescript-eslint/no-use-before-define
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async ({ paginate }: { paginate: PaginateFunction }) => {
	const postsList = await listAllPosts();

	return paginate(postsList, {
		pageSize: MAX_POSTS_PER_PAGE
	});
}) satisfies GetStaticPaths;

const {
	data: posts,
	url,
	currentPage, lastPage,
	start, end, total, size
} = Astro.props.page;

const BLOG_URL = Astro.site?.href ?? '';
---
<BaseLayout
	htmlTitle={['Home Page', 'Toronto JS Blog']}
	title="Home Page"
	url={BLOG_URL ?? ''}
	description="Offline page for the Toronto JS blog. If you are offline, you can still navigate the site, but some content might not be available."
	tags={['development', 'javascript', 'toronto', 'community', 'blog']}
>
	<SkipToContent slot="header" />
	<header slot="header">
		<SiteNav />
	</header>

	<BlogPostsLayout
		posts={posts}
		baseUrl={BLOG_URL}
		currentUrl={url.current}
		currentPage={currentPage}
		lastPage={lastPage}
		prevUrl={url.prev}
		nextUrl={url.next}
		start={start}
		end={end}
		total={total}
		size={size}
	>
	<Fragment slot="header">
		TorontoJS Blog
	</Fragment>
 </BlogPostsLayout>

	<!-- <div id="contents">
	</div> -->
</BaseLayout>
